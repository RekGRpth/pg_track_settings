CREATE EXTENSION pg_track_settings;
-- test main config history
SELECT COUNT(*) FROM public.pg_track_settings_history;
 count 
-------
     0
(1 row)

SET work_mem = '10MB';
SELECT * FROM public.pg_track_settings_snapshot();
 pg_track_settings_snapshot 
----------------------------
 t
(1 row)

SELECT pg_catalog.pg_sleep(1);
 pg_sleep 
----------
 
(1 row)

SET work_mem = '5MB';
SELECT * FROM public.pg_track_settings_snapshot();
 pg_track_settings_snapshot 
----------------------------
 t
(1 row)

SELECT name, setting_exists, setting, setting_pretty FROM public.pg_track_settings_log('work_mem') ORDER BY ts ASC;
   name   | setting_exists | setting | setting_pretty 
----------+----------------+---------+----------------
 work_mem | t              | 10240   | 10MB
 work_mem | t              | 5120    | 5MB
(2 rows)

SELECT name, from_setting, from_exists, to_setting, to_exists, from_setting_pretty, to_setting_pretty FROM public.pg_track_settings_diff(now() - interval '500 ms', now());
   name   | from_setting | from_exists | to_setting | to_exists | from_setting_pretty | to_setting_pretty 
----------+--------------+-------------+------------+-----------+---------------------+-------------------
 work_mem | 10240        | t           | 5120       | t         | 10MB                | 5MB
(1 row)

-- test pg_db_role_settings
ALTER DATABASE postgres SET work_mem = '1MB';
SELECT * FROM public.pg_track_settings_snapshot();
 pg_track_settings_snapshot 
----------------------------
 t
(1 row)

ALTER ROLE postgres SET work_mem = '2MB';
SELECT * FROM public.pg_track_settings_snapshot();
 pg_track_settings_snapshot 
----------------------------
 t
(1 row)

ALTER ROLE postgres IN DATABASE postgres SET work_mem = '3MB';
SELECT * FROM public.pg_track_settings_snapshot();
 pg_track_settings_snapshot 
----------------------------
 t
(1 row)

SELECT * FROM public.pg_track_settings_snapshot();
 pg_track_settings_snapshot 
----------------------------
 t
(1 row)

SELECT COALESCE(datname, '-') AS datname, setrole::regrole, name, setting_exists, setting FROM public.pg_track_db_role_settings_log('work_mem') s LEFT JOIN pg_database d ON d.oid = s.setdatabase ORDER BY ts ASC;
 datname  | setrole  |   name   | setting_exists | setting 
----------+----------+----------+----------------+---------
 postgres | -        | work_mem | t              | 1MB
 -        | postgres | work_mem | t              | 2MB
 postgres | postgres | work_mem | t              | 3MB
(3 rows)

SELECT COALESCE(datname, '-') AS datname, setrole::regrole, name, from_setting, from_exists, to_setting, to_exists FROM public.pg_track_db_role_settings_diff(now() - interval '10 min', now()) s LEFT JOIN pg_database d ON d.oid = s.setdatabase WHERE name = 'work_mem' ORDER BY 1, 2, 3;
 datname  | setrole  |   name   | from_setting | from_exists | to_setting | to_exists 
----------+----------+----------+--------------+-------------+------------+-----------
 -        | postgres | work_mem |              | f           | 2MB        | t
 postgres | -        | work_mem |              | f           | 1MB        | t
 postgres | postgres | work_mem |              | f           | 3MB        | t
(3 rows)

ALTER DATABASE postgres RESET work_mem;
ALTER ROLE postgres RESET work_mem;
ALTER ROLE postgres IN DATABASE postgres RESET work_mem;
-- test pg_reboot
SELECT COUNT(*) FROM public.pg_reboot;
 count 
-------
     1
(1 row)

SELECT now() - ts > interval '2 second' FROM pg_reboot;
 ?column? 
----------
 t
(1 row)

-- test the reset
SELECT * FROM pg_track_settings_reset();
 pg_track_settings_reset 
-------------------------
 
(1 row)

SELECT COUNT(*) FROM public.pg_track_settings_history;
 count 
-------
     0
(1 row)

SELECT COUNT(*) FROM public.pg_track_settings_log('work_mem');
 count 
-------
     0
(1 row)

SELECT COUNT(*) FROM public.pg_track_settings_diff(now() - interval '1 hour', now());
 count 
-------
     0
(1 row)

SELECT COUNT(*) FROM public.pg_track_db_role_settings_log('work_mem');
 count 
-------
     0
(1 row)

SELECT COUNT(*) FROM public.pg_track_db_role_settings_diff(now() - interval '1 hour', now());
 count 
-------
     0
(1 row)

SELECT COUNT(*) FROM public.pg_reboot;
 count 
-------
     0
(1 row)

